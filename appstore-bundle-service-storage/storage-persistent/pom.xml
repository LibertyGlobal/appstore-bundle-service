<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.lgi.appstorebundle</groupId>
        <artifactId>appstore-bundle-service-storage</artifactId>
        <version>0.14.0</version>
    </parent>

    <artifactId>storage-persistent</artifactId>

    <packaging>jar</packaging>

    <properties>
        <db.user>postgres</db.user>
        <db.password>postgres</db.password>
        <db.name>postgres</db.name>
        <db.host>localhost</db.host>
        <db.port>5432</db.port>
        <ryuk.port>46577</ryuk.port>
        <javadoc.opts>-Xdoclint:none</javadoc.opts>
        <db.schema>appstore_bundle_service</db.schema>
        <!--suppress UnresolvedMavenProperty -->
        <db.url>jdbc:postgresql://${db.host}:${db.port}/postgres</db.url>
        <hikari.test.version>3.4.1</hikari.test.version>
        <sonar.exclusions>**/migrator/**</sonar.exclusions>
        <sock-dir-docker-host>/var/run/docker.sock</sock-dir-docker-host>
    </properties>

    <profiles>
        <profile>
            <id>windows-specific-settings</id>
            <activation>
                <os>
                    <family>Windows</family>
                </os>
            </activation>
            <properties>
                <sock-dir-docker-host>//var/run/docker.sock</sock-dir-docker-host>
            </properties>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jooq</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-meta</artifactId>
        </dependency>
        <dependency>
            <groupId>com.lgi.appstorebundle</groupId>
            <artifactId>storage-common</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <version>${hikari.test.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.42.1</version>
                <configuration>
                    <logStdout>true</logStdout>
                    <verbose>true</verbose>
                    <images>
                        <image>
                            <alias>ryuk-summoned</alias>
                            <name>testcontainers/ryuk:0.4.0</name>
                            <run>
                                <ports>
                                    <port>ryuk.port:8080</port>
                                </ports>
                                <volumes>
                                    <bind>
                                        <volume>${sock-dir-docker-host}:/var/run/docker.sock</volume>
                                    </bind>
                                </volumes>
                                <autoRemove>true</autoRemove>
                            </run>
                        </image>
                        <image>
                            <alias>postgres</alias>
                            <name>postgres:12</name>
                            <run>
                                <env>
                                    <POSTGRES_PASSWORD>${db.password}</POSTGRES_PASSWORD>
                                </env>
                                <ports>
                                    <port>db.port:5432</port>
                                </ports>
                                <wait>
                                    <time>5000</time>
                                </wait>
                                <autoRemove>true</autoRemove>
                                <labels>
                                    <killme>true</killme>
                                </labels>
                            </run>
                        </image>
                    </images>
                </configuration>
                <executions>
                    <execution>
                        <id>start-postgres</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.libertyglobal.common.maven</groupId>
                <artifactId>tcp-msg-maven-plugin</artifactId>
                <version>1.0.0</version>
                <executions>
                    <execution>
                        <id>write-death-note-for-postgres</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tcpmsg</goal>
                        </goals>
                        <configuration>
                            <port>${ryuk.port}</port>
                            <msg>label=killme</msg>
                            <repeatAmount>2</repeatAmount>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>migrate</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <url>${db.url}</url>
                    <user>${db.user}</user>
                    <password>${db.password}</password>
                    <schemas>
                        <schema>${db.schema}</schema>
                    </schemas>
                    <locations>
                        <location>filesystem:src/main/resources/migration</location>
                    </locations>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>${postgresql.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <executions>
                    <execution>
                        <id>ASBS-model-generation</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <jdbc>
                                <url>${db.url}</url>
                                <user>${db.user}</user>
                                <!--suppress UnresolvedMavenProperty -->
                                <password>${db.password}</password>
                            </jdbc>
                            <generator>
                                <database>
                                    <name>org.jooq.meta.postgres.PostgresDatabase</name>
                                    <includes>.*</includes>
                                    <excludes>flyway_schema_history</excludes>
                                    <inputSchema>${db.schema}</inputSchema>
                                    <schemaVersionProvider>SELECT :schema_name || '_' || MAX("version") FROM
                                        "${db.schema}"."flyway_schema_history"
                                    </schemaVersionProvider>
                                    <forcedTypes>
                                        <forcedType>
                                            <!-- We prefer JodaTime's DateTime instead of java.time.OffsetDateTime -->
                                            <priority>0</priority>
                                            <userType>org.joda.time.DateTime</userType>
                                            <converter>
                                                com.lgi.appstorebundle.storage.persistent.converter.OffsetDateTimeDateTimeConverter
                                            </converter>
                                            <includeTypes>(?i:\Qtimestamp with time zone\E)</includeTypes>
                                            <nullability>ALL</nullability>
                                            <objectType>ALL</objectType>
                                        </forcedType>
                                    </forcedTypes>
                                </database>
                                <target>
                                    <packageName>com.lgi.appstorebundle.jooq.generated</packageName>
                                    <directory>target/generated-sources/jooq</directory>
                                </target>
                                <generate>
                                    <fluentSetters>true</fluentSetters>
                                </generate>
                            </generator>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
