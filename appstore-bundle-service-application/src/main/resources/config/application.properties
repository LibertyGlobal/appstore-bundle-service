http.retry.after=${HTTP_RETRY_AFTER:30s}
query.timeout.seconds=${QUERY_TIMEOUT_SECONDS:50}
bundle.encryption.enabled=${BUNDLE_ENCRYPTION_ENABLED:true}
bundle.extension=${BUNDLE_EXTENSION:tar.gz}
environment=${ENVIRONMENT:DEV}
logging.level.org.jooq.tools.LoggerListener=DEBUG

springdoc.swagger-ui.path=/swagger
springdoc.swagger-ui.url=/appstore-bundle-service.yaml

spring.profiles.active=@spring.profiles.active@

asms.service.url=${APPSTORE_METADATA_SERVICE_URL}
asms.r4j.cb.name="AppStore Metadata Service client circuit breaker"
asms.r4j.cb.failure_rate_threshold=100
asms.r4j.cb.wait_duration_in_open_state=5s
asms.r4j.cb.ring_buffer_size_in_half_open_state=1
asms.r4j.cb.ring_buffer_size_in_closed_state=5
asms.r4j.cb.is_automatic_transition_from_open_to_half_open_enabled=true

asms.r4j.bh.name="AppStore Metadata Service client bulkhead"
asms.r4j.bh.maxConcurrentCalls=100
asms.r4j.bh.maxWaitDuration=500ms
asms.r4j.bh.writableStackTraceEnabled=true

asms.request.timeout=1000ms
asms.idle.timeout=60s

rabbitmq.generationQueueName=${GENERATION_QUEUE_NAME:bundlegen-service-requests}
rabbitmq.generationStatusQueueName=${GENERATION_STATUS_QUEUE_NAME:bundlegen-service-status}
rabbitmq.encryptionQueueName=${ENCRYPTION_QUEUE_NAME:bundlecrypt-service-requests}
rabbitmq.encryptionStatusQueueName=${ENCRYPTION_STATUS_QUEUE_NAME:bundlecrypt-service-status}
rabbitmq.host.name=${RABBITMQ_HOST:localhost}
rabbitmq.port=${RABBITMQ_PORT:5672}
rabbitmq.url=amqp://${rabbitmq.host.name}:${rabbitmq.port}

database.host.read=${READ_NODE_JDBC_HOST:localhost}
database.host.write=${WRITE_NODE_JDBC_HOST:localhost}
database.port=${JDBC_PORT:5432}
database.name=${JDBC_DATABASE_NAME:postgres}
database.schema=${JDBC_SCHEMA:appstore_bundle_service}

spring.datasource.hikari.read.jdbcUrl=jdbc:postgresql://${database.host.read}:${database.port}/${database.name}?currentSchema=${database.schema}&ApplicationName=AppstoreBundleService
spring.datasource.hikari.read.username=${JDBC_USER:postgres}
spring.datasource.hikari.read.password=${JDBC_PASSWORD:postgres}
spring.datasource.hikari.read.poolName=asbs_read_node
spring.datasource.hikari.read.maximumPoolSize=${MAX_READ_NODE_POOL_SIZE:10}
spring.datasource.hikari.read.minimumIdle=2
spring.datasource.hikari.read.connectionTimeout=1000
spring.datasource.hikari.read.readOnly=true
spring.datasource.hikari.read.leakDetectionThreshold=180000
spring.datasource.hikari.write.jdbcUrl=jdbc:postgresql://${database.host.write}:${database.port}/${database.name}?currentSchema=${database.schema}&ApplicationName=AppstoreBundleService
spring.datasource.hikari.write.username=${JDBC_USER:postgres}
spring.datasource.hikari.write.password=${JDBC_PASSWORD:postgres}
spring.datasource.hikari.write.poolName=asbs_write_node
spring.datasource.hikari.write.maximumPoolSize=${MAX_WRITE_NODE_POOL_SIZE:10}
spring.datasource.hikari.write.minimumIdle=2
spring.datasource.hikari.write.connectionTimeout=1000
spring.datasource.hikari.write.leakDetectionThreshold=180000

spring.jackson.default-property-inclusion=NON_NULL

datasource.stack.name=${STACK_NAME:}
datasource.charset=UTF-8

spring.mvc.pathmatch.matching-strategy=ant_path_matcher

management.endpoints.jmx.exposure.exclude=info
management.endpoint.info.enabled=true
management.info.defaults.enabled=false
management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.prometheus.enabled=${PROMETHEUS_METRICS:false}
management.metrics.web.server.request.autotime.enabled=true
server.tomcat.mbeanregistry.enabled=true
server.error.whitelabel.enabled=false
server.error.include-stacktrace=never
webApplications.list=HTML5,LIGHTNING